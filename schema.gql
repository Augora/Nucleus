enum GroupeSigle {
  GDR
  LFI
  LR
  LREM
  LT
  MODEM
  NI
  NG
  SOC
  UAI
}

enum Sexe {
  F
  H
}

type AncienMandat {
  DateDeDebut: String
  DateDeFin: String
  Intitule: String
  Depute: Depute!
}

type AutreMandat {
  Localite: String
  Institution: String
  Intitule: String
  Depute: Depute!
}

type Activite {
  DateDeDebut: String
  DateDeFin: String
  NumeroDeSemaine: Int
  PresencesEnCommission: Int
  PresenceEnHemicycle: Int
  ParticipationsEnCommission: Int
  ParticipationEnHemicycle: Int
  Question: Int
  Vacances: Int
  Depute: Depute!
}

type Adresse {
  AdresseComplete: String
  CodePostal: String
  Telephone: String
  Depute: Depute!
}

type Depute {
  # Attributes
  Slug: String! @unique @index
  Nom: String
  NomDeFamille: String
  Prenom: String
  DateDeNaissance: String
  LieuDeNaissance: String
  NumeroDepartement: String
  NomCirconscription: String
  NumeroCirconscription: Int
  DebutDuMandat: String
  parti_ratt_financier: String
  Profession: String
  PlaceEnHemicycle: String
  URLAssembleeNationnale: String
  IDAssembleeNationnale: String
  URLNosdeputes: String
  URLNosdeputesAPI: String
  NombreMandats: Int
  Twitter: String
  EstEnMandat: Boolean
  SigleGroupePolitique: GroupeSigle
  Sexe: Sexe

  # Arrays
  SitesWeb: [String]
  Emails: [String]
  Collaborateurs: [String]
  Adresses: [String]

  # Relations
  AdressesDetails: [Adresse] @relation
  AnciensMandats: [AncienMandat] @relation
  AutresMandats: [AutreMandat] @relation
  Activites: [Activite] @relation
}

type Query {
  Deputes: [Depute!]
  DeputesEnMandat(EstEnMandat: Boolean): [Depute!]
  Depute(Slug: String!): Depute!
  GroupesParlementaires: [String!] @resolver(name: "GroupesParlementaires")
  # Activite(Slug: String!): [Activite!]!
}
