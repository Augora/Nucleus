directive @embedded on OBJECT

directive @collection(name: String!) on OBJECT

directive @index(name: String!) on FIELD_DEFINITION

directive @resolver(name: String, paginated: Boolean! = false) on FIELD_DEFINITION

directive @relation(name: String) on FIELD_DEFINITION

directive @unique(index: String) on FIELD_DEFINITION

type AncienMandat {
  """The document's ID."""
  _id: ID!
  DateDeDebut: String
  Depute: Depute
  Intitule: String
  DateDeFin: String

  """The document's timestamp."""
  _ts: Long!
}

"""
Allow manipulating the relationship between the types 'AncienMandat' and 'Depute' using the field 'AncienMandat.Depute'.
"""
input AncienMandatDeputeRelation {
  """
  Create a document of type 'Depute' and associate it with the current document.
  """
  create: DeputeInput

  """
  Connect a document of type 'Depute' with the current document using its ID.
  """
  connect: ID

  """If true, disconnects this document from 'Depute'"""
  disconnect: Boolean
}

"""'AncienMandat' input values"""
input AncienMandatInput {
  DateDeDebut: String
  DateDeFin: String
  Intitule: String
  Depute: AncienMandatDeputeRelation
}

"""The pagination object for elements of type 'AncienMandat'."""
type AncienMandatPage {
  """The elements of type 'AncienMandat' in this page."""
  data: [AncienMandat]!

  """A cursor for elements coming after the current page."""
  after: String

  """A cursor for elements coming before the current page."""
  before: String
}

type AutreMandat {
  Institution: String

  """The document's ID."""
  _id: ID!
  Depute: Depute
  Localite: String
  Intitule: String

  """The document's timestamp."""
  _ts: Long!
}

"""
Allow manipulating the relationship between the types 'AutreMandat' and 'Depute' using the field 'AutreMandat.Depute'.
"""
input AutreMandatDeputeRelation {
  """
  Create a document of type 'Depute' and associate it with the current document.
  """
  create: DeputeInput

  """
  Connect a document of type 'Depute' with the current document using its ID.
  """
  connect: ID

  """If true, disconnects this document from 'Depute'"""
  disconnect: Boolean
}

"""'AutreMandat' input values"""
input AutreMandatInput {
  Localite: String
  Institution: String
  Intitule: String
  Depute: AutreMandatDeputeRelation
}

"""The pagination object for elements of type 'AutreMandat'."""
type AutreMandatPage {
  """The elements of type 'AutreMandat' in this page."""
  data: [AutreMandat]!

  """A cursor for elements coming after the current page."""
  after: String

  """A cursor for elements coming before the current page."""
  before: String
}

scalar Date

type Depute {
  LieuDeNaissance: String
  SitesWeb: [String]
  DebutDuMandat: String
  NumeroDepartement: String
  Slug: String
  parti_ratt_financier: String
  URLNosdeputes: String

  """The document's ID."""
  _id: ID!
  Emails: [String]
  URLNosdeputesAPI: String
  Twitter: String
  NomDeFamille: String
  NomCirconscription: String
  Profession: String
  AutresMandats(
    """The number of items to return per page."""
    _size: Int

    """The pagination cursor."""
    _cursor: String
  ): AutreMandatPage!
  NombreMandats: Int
  Prenom: String
  Nom: String
  Sexe: Sexe
  DateDeNaissance: String
  NumeroCirconscription: Int
  PlaceEnHemicycle: String
  IDAssembleeNationnale: String
  Adresses: [String]
  URLAssembleeNationnale: String
  Collaborateurs: [String]
  AnciensMandats(
    """The number of items to return per page."""
    _size: Int

    """The pagination cursor."""
    _cursor: String
  ): AncienMandatPage!

  """The document's timestamp."""
  _ts: Long!
  SigleGroupePolitique: GroupeSigle
}

"""
Allow manipulating the relationship between the types 'Depute' and 'AncienMandat'.
"""
input DeputeAnciensMandatsRelation {
  """
  Create one or more documents of type 'AncienMandat' and associate them with the current document.
  """
  create: [AncienMandatInput]

  """
  Connect one or more documents of type 'AncienMandat' with the current document using their IDs.
  """
  connect: [ID]

  """
  Disconnect the given documents of type 'AncienMandat' from the current document using their IDs.
  """
  disconnect: [ID]
}

"""
Allow manipulating the relationship between the types 'Depute' and 'AutreMandat'.
"""
input DeputeAutresMandatsRelation {
  """
  Create one or more documents of type 'AutreMandat' and associate them with the current document.
  """
  create: [AutreMandatInput]

  """
  Connect one or more documents of type 'AutreMandat' with the current document using their IDs.
  """
  connect: [ID]

  """
  Disconnect the given documents of type 'AutreMandat' from the current document using their IDs.
  """
  disconnect: [ID]
}

"""'Depute' input values"""
input DeputeInput {
  Slug: String
  Nom: String
  NomDeFamille: String
  Prenom: String
  Sexe: Sexe
  DateDeNaissance: String
  LieuDeNaissance: String
  NumeroDepartement: String
  NomCirconscription: String
  NumeroCirconscription: Int
  DebutDuMandat: String
  SigleGroupePolitique: GroupeSigle
  parti_ratt_financier: String
  Profession: String
  PlaceEnHemicycle: String
  URLAssembleeNationnale: String
  IDAssembleeNationnale: String
  URLNosdeputes: String
  URLNosdeputesAPI: String
  NombreMandats: Int
  Twitter: String
  SitesWeb: [String]
  Emails: [String]
  Adresses: [String]
  Collaborateurs: [String]
  AnciensMandats: DeputeAnciensMandatsRelation
  AutresMandats: DeputeAutresMandatsRelation
}

"""The pagination object for elements of type 'Depute'."""
type DeputePage {
  """The elements of type 'Depute' in this page."""
  data: [Depute]!

  """A cursor for elements coming after the current page."""
  after: String

  """A cursor for elements coming before the current page."""
  before: String
}

enum GroupeSigle {
  GDR
  LFI
  LR
  LREM
  LT
  MODEM
  NI
  NG
  SOC
  UAI
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  """Update an existing document in the collection of 'Depute'"""
  updateDepute(
    """The 'Depute' document's ID"""
    id: ID!

    """'Depute' input values"""
    data: DeputeInput!
  ): Depute

  """Delete an existing document in the collection of 'Depute'"""
  deleteDepute(
    """The 'Depute' document's ID"""
    id: ID!
  ): Depute

  """Update an existing document in the collection of 'AncienMandat'"""
  updateAncienMandat(
    """The 'AncienMandat' document's ID"""
    id: ID!

    """'AncienMandat' input values"""
    data: AncienMandatInput!
  ): AncienMandat

  """Update an existing document in the collection of 'AutreMandat'"""
  updateAutreMandat(
    """The 'AutreMandat' document's ID"""
    id: ID!

    """'AutreMandat' input values"""
    data: AutreMandatInput!
  ): AutreMandat

  """Create a new document in the collection of 'AncienMandat'"""
  createAncienMandat(
    """'AncienMandat' input values"""
    data: AncienMandatInput!
  ): AncienMandat!

  """Delete an existing document in the collection of 'AutreMandat'"""
  deleteAutreMandat(
    """The 'AutreMandat' document's ID"""
    id: ID!
  ): AutreMandat

  """Create a new document in the collection of 'Depute'"""
  createDepute(
    """'Depute' input values"""
    data: DeputeInput!
  ): Depute!

  """Delete an existing document in the collection of 'AncienMandat'"""
  deleteAncienMandat(
    """The 'AncienMandat' document's ID"""
    id: ID!
  ): AncienMandat

  """Create a new document in the collection of 'AutreMandat'"""
  createAutreMandat(
    """'AutreMandat' input values"""
    data: AutreMandatInput!
  ): AutreMandat!
}

type Query {
  DeputesEnMandat(
    """The number of items to return per page."""
    _size: Int

    """The pagination cursor."""
    _cursor: String
  ): DeputePage!
  Depute(Slug: String!): Depute

  """Find a document from the collection of 'Depute' by its id."""
  findDeputeByID(
    """The 'Depute' document's ID"""
    id: ID!
  ): Depute
  Deputes(
    """The number of items to return per page."""
    _size: Int

    """The pagination cursor."""
    _cursor: String
  ): DeputePage!

  """Find a document from the collection of 'AutreMandat' by its id."""
  findAutreMandatByID(
    """The 'AutreMandat' document's ID"""
    id: ID!
  ): AutreMandat

  """Find a document from the collection of 'AncienMandat' by its id."""
  findAncienMandatByID(
    """The 'AncienMandat' document's ID"""
    id: ID!
  ): AncienMandat
}

enum Sexe {
  F
  H
}

scalar Time

